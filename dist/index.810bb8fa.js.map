{"mappings":"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","sources":["script.js"],"sourcesContent":["const btnCheck = document.querySelector('.check');\r\nconst btnAgain = document.querySelector('.again');\r\nconst btnSumbit = document.querySelector('.btn-submit');\r\nconst guess = document.querySelector('.guess');\r\nconst message = document.querySelector('.message');\r\nconst messageError = document.querySelector('.message-error');\r\nconst scoreLabel = document.querySelector('.score');\r\nconst highScoreLabel = document.querySelector('.highscore');\r\nconst minNum = document.querySelector('.min-num');\r\nconst maxNum = document.querySelector('.max-num');\r\nconst between = document.querySelector('.between');\r\n\r\nconst state = {\r\n  secretNum: 0,\r\n  highScore: 0,\r\n  score: 20,\r\n  maxNum: 20,\r\n  minNum: 1,\r\n  playing: true,\r\n};\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst setValuesToNewGame = function () {\r\n  state.score = 20;\r\n  scoreLabel.textContent = '20';\r\n  message.textContent = 'Start guessing...';\r\n  between.textContent = `(Between ${state.minNum} and ${state.maxNum})`;\r\n};\r\n\r\nconst setValuesToDefault = function () {\r\n  state.maxNum = 20;\r\n  state.minNum = 1;\r\n  state.secretNum = createPositiveRandomNumber(); // Create random number between 1 and 20\r\n  state.score = 20;\r\n  state.playing = true;\r\n  scoreLabel.textContent = '20';\r\n  message.textContent = 'Start guessing...';\r\n  between.textContent = '(Between 1 and 20)';\r\n};\r\n\r\nconst createSetTimeout = function () {\r\n  setTimeout(() => {\r\n    messageError.textContent = '';\r\n  }, 3500);\r\n};\r\n\r\nconst clearInputFields = function () {\r\n  guess.value = '';\r\n  minNum.value = '';\r\n  maxNum.value = '';\r\n};\r\n\r\nconst createPositiveRandomNumber = function () {\r\n  return (\r\n    Math.trunc(Math.random() * (state.maxNum - state.minNum) + 1) + state.minNum\r\n  );\r\n};\r\n\r\nconst checkMaxGreater = function (negativeVal = false) {\r\n  // Check if min. number is greater than max. number.\r\n  // If this is the case, return. min. number should always be lower.\r\n\r\n  // With only negative values (negativeVal), things work different with comparing\r\n  const condition = negativeVal\r\n    ? state.minNum < state.maxNum\r\n    : state.minNum > state.maxNum;\r\n\r\n  if (condition) {\r\n    messageError.textContent =\r\n      \"Minimum number can't be higher than maximum number. Random number created between 1-20.\";\r\n\r\n    createSetTimeout();\r\n\r\n    return false;\r\n  }\r\n};\r\n\r\nconst compareGuessNumWithSecretNum = function (val) {\r\n  if (val > state.secretNum) {\r\n    state.score--;\r\n    message.textContent = 'Too high';\r\n    scoreLabel.textContent = state.score;\r\n  }\r\n\r\n  if (val < state.secretNum) {\r\n    state.score--;\r\n    message.textContent = 'Too low';\r\n    scoreLabel.textContent = state.score;\r\n  }\r\n\r\n  if (val === state.secretNum) {\r\n    if (!state.playing) return;\r\n    state.score--;\r\n    message.textContent = 'Correct!';\r\n    if (state.score > state.highScore) state.highScore = state.score;\r\n    scoreLabel.textContent = state.score;\r\n    highScoreLabel.textContent = state.highScore;\r\n    state.playing = false;\r\n  }\r\n};\r\n\r\nconst checkGuessNumber = function () {\r\n  const val = +guess.value;\r\n  // With only negative values, things work different with comparing (other way around)\r\n  if (state.maxNum < 0 && state.minNum < 0) {\r\n    if (val < state.maxNum || val > state.minNum) {\r\n      message.textContent = `Number range is ${state.minNum}-${state.maxNum}.`;\r\n      return;\r\n    }\r\n    compareGuessNumWithSecretNum(val);\r\n  }\r\n\r\n  // Below is for positive values\r\n  if (\r\n    (state.maxNum > 0 && state.minNum > 0) ||\r\n    (state.maxNum > 0 && state.minNum < 0)\r\n  ) {\r\n    if (val > state.maxNum || val < state.minNum) {\r\n      message.textContent = `Number range is ${state.minNum}-${state.maxNum}.`;\r\n      return;\r\n    }\r\n    compareGuessNumWithSecretNum(val);\r\n  }\r\n};\r\n\r\nconst checkMinandMaxFields = function () {\r\n  // Set borders back to default - when user filled in one field before instead of two the border was red\r\n  minNum.style.border = '2px solid #eee';\r\n  maxNum.style.border = '2px solid #eee';\r\n\r\n  // Get values out of fields\r\n  const maxNumVal = maxNum.value;\r\n  const minNumVal = minNum.value;\r\n\r\n  // If not a number, return immediately\r\n  if (!isFinite(minNumVal) || !isFinite(maxNumVal)) {\r\n    messageError.textContent =\r\n      'Only numbers as input are valid. Random number created between 1-20.';\r\n    clearInputFields();\r\n    createSetTimeout();\r\n    setValuesToDefault();\r\n    return;\r\n  }\r\n\r\n  // When both fields are filled in, move on to init() function\r\n  if (maxNumVal !== '' && minNumVal !== '') {\r\n    state.maxNum = +maxNumVal;\r\n    state.minNum = +minNumVal;\r\n  }\r\n\r\n  // When one of the fields is empty, apply red border to that field\r\n  if (maxNumVal === '' || minNumVal === '') {\r\n    minNum.value === ''\r\n      ? (minNum.style.border = '2px solid #C02B0B')\r\n      : (maxNum.style.border = '2px solid #C02B0B');\r\n\r\n    // Set back to 20 and 1 and clear input fields\r\n    messageError.textContent =\r\n      'Please fill in both fields. Random number created between 1-20.';\r\n    clearInputFields();\r\n    createSetTimeout();\r\n    setValuesToDefault();\r\n    return;\r\n  }\r\n\r\n  init();\r\n};\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst init = function () {\r\n  // Return when both values are the same\r\n  if (state.maxNum === state.minNum) {\r\n    messageError.textContent =\r\n      \"Numbers can't be the same. Random number created between 1-20.\";\r\n    createSetTimeout();\r\n    clearInputFields();\r\n    setValuesToDefault();\r\n    return;\r\n  }\r\n\r\n  // When max. is 0 and min. is > 1\r\n  if (state.maxNum === 0 && state.minNum > 1) {\r\n    messageError.textContent =\r\n      \"Minimum number can't be higher than maximum number. Random number created between 1-20.\";\r\n    createSetTimeout();\r\n    clearInputFields();\r\n    setValuesToDefault();\r\n    return;\r\n  }\r\n  if (state.maxNum - state.minNum === 1 || state.maxNum - state.minNum === -1) {\r\n    // When difference between max. and min. is only 1 (e.g. 1-0, 2-1, 3-2 etc.).\r\n    // Random number range will always be 1 which is unwanted.\r\n    messageError.textContent =\r\n      'Please use wider range. Random number created between 1-20.';\r\n    createSetTimeout();\r\n    clearInputFields();\r\n    setValuesToDefault();\r\n    return;\r\n  }\r\n\r\n  // When both min. and max. values are positive (default)\r\n  if (state.maxNum > 0 && state.minNum > 0) {\r\n    const check = checkMaxGreater();\r\n\r\n    if (check === false) {\r\n      setValuesToDefault();\r\n      clearInputFields();\r\n      return;\r\n    }\r\n\r\n    state.secretNum = createPositiveRandomNumber();\r\n    setValuesToNewGame();\r\n    clearInputFields();\r\n  }\r\n\r\n  // When both min. and max. numbers are negative\r\n  // With only negative values (negativeVal), things work the other way around with comparing\r\n  if (state.maxNum < 0 && state.minNum < 0) {\r\n    const check = checkMaxGreater(true);\r\n\r\n    if (check === false) {\r\n      setValuesToDefault();\r\n      clearInputFields();\r\n      return;\r\n    }\r\n\r\n    state.secretNum =\r\n      Math.trunc(Math.random() * (state.maxNum - state.minNum) - 1) +\r\n      state.minNum;\r\n\r\n    setValuesToNewGame();\r\n    clearInputFields();\r\n    return;\r\n  }\r\n\r\n  // When one of the numbers is positive and one negative\r\n  if (state.maxNum < 0 || state.minNum < 0) {\r\n    const check = checkMaxGreater();\r\n\r\n    if (check === false) {\r\n      setValuesToDefault();\r\n      clearInputFields();\r\n      return;\r\n    }\r\n\r\n    // e.g. max = 30, min = -20. Player basically wants a number between 1 to 30 and -1 to -20.\r\n    // We create a random number. When it is <= the minimum number (in this case 20 (we cut of the '-')), we create a random number again\r\n    // When this random number is > 0.5 we multiply the first created random number 1, when it is < 0.5 we multiple it by -1\r\n    // With this we can create a number that is either negative or positive when the number is <= 20 (and in this example this is what the user wants (number between -1 to -20))\r\n    // In this case -20 is excluded and -1 is included\r\n    let num = Math.trunc(Math.random() * state.maxNum) + 1;\r\n    if (num <= Math.abs(state.minNum)) {\r\n      num *= Math.random() > 0.5 ? 1 : -1;\r\n    }\r\n    state.secretNum = num;\r\n\r\n    setValuesToNewGame();\r\n    clearInputFields();\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------------\r\n\r\n// Event listeners\r\nbtnCheck.addEventListener('click', checkGuessNumber);\r\nguess.addEventListener('keypress', function (e) {\r\n  if (e.key === 'Enter') checkGuessNumber();\r\n});\r\n\r\nconst elements = [minNum, maxNum];\r\nelements.forEach(element =>\r\n  element.addEventListener('keypress', function (e) {\r\n    state.playing = true;\r\n    if (e.key === 'Enter') checkMinandMaxFields();\r\n  })\r\n);\r\n\r\nbtnSumbit.addEventListener('click', function () {\r\n  state.playing = true;\r\n  checkMinandMaxFields();\r\n});\r\nbtnAgain.addEventListener('click', function () {\r\n  setValuesToDefault();\r\n  clearInputFields();\r\n  state.secretNum = createPositiveRandomNumber();\r\n});\r\n\r\ninit();\r\n"],"names":[],"version":3,"file":"index.810bb8fa.js.map","sourceRoot":"/__parcel_source_root/"}